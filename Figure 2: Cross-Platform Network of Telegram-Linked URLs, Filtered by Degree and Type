import networkx as nx
import matplotlib.pyplot as plt
import matplotlib.patches as mpatches

pos = nx.spring_layout(B_filtered, k=1.2, seed=42)

plt.figure(figsize=(14, 12))
nx.draw_networkx_edges(B_filtered, pos, alpha=0.2)
nx.draw_networkx_nodes(B_filtered, pos, node_color=node_colors, node_size=node_sizes)

labels = {n: n for n in B_filtered.nodes() if B_filtered.degree(n) >= 10}
for node, (x, y) in pos.items():
    if node in labels:
        plt.text(x + 0.03, y + 0.03, labels[node], fontsize=9, bbox=dict(facecolor='white', alpha=0.7, edgecolor='none'))

legend_handles = [mpatches.Patch(color=c, label=t if t is not None else 'None') for t, c in color_map.items()]
plt.legend(handles=legend_handles, loc='upper left', title="Node Types")

plt.title(f"Filtered Network: node types {node_types_to_keep}, degree â‰¥ {min_degree}")
plt.axis('off')
plt.tight_layout()

plt.savefig('network_graph.png', dpi=300, bbox_inches='tight')

plt.show()
